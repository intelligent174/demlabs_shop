services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demlabs_shop
    command: [ "/app/docker/app.sh" ]
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
#      redis:
#        condition: service_healthy
    secrets:
      - redis_password
      - postgres_password
  db:
    image: postgres:16-alpine
    container_name: db_demlabs_shop
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    ports:
      - 5533:5432
    volumes:
      - db-demlabs-shop:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 5
    secrets:
      - postgres_password
  redis:  # TODO: реализовать ACL. Не забыть отключить default user в redis.conf (user default off)
    container_name: redis_demlabs_shop
    build:
      context: .
      dockerfile: docker/redis/Dockerfile
    restart: unless-stopped
    environment:
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
    volumes:
      - redis-demlabs-shop:/data
    ports:
      - 6699:6379
    healthcheck:
      test: ["CMD-SHELL", "echo 'auth $(cat $$REDIS_PASSWORD_FILE)\nping' | redis-cli | grep PONG"]
      interval: 10s
      timeout: 10s
      retries: 5
    secrets:
      - redis_password
    command: [ "/redis/init.sh" ]
  redis_insight:
    image: redis/redisinsight:latest
    container_name: redis_insight_demlabs_shop
    restart: unless-stopped
    ports:
      - 5544:5540
    volumes:
      - redis-insight-demlabs-shop:/db

volumes:
  db-demlabs-shop:
    name: "db-demlabs-shop"
  redis-demlabs-shop:
    name: "redis-demlabs-shop"
  redis-insight-demlabs-shop:
    name: "redis-insight-demlabs-shop"

secrets:
  redis_password:
    file: ./secrets/redis/redis_password.txt
  postgres_password:
    file: ./secrets/postgres/postgres_password.txt

# TODO: добавить сети.